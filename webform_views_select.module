<?php

/**
 * @file
 * Module file for Webform Views Select.
 */

/**
 * Implements hook_views_api().
 */
function webform_views_select_views_api() {
  return array(
    'api' => 3,
  );
}

/**
 * Implements hook_webform_select_options_info().
 */
function webform_views_select_webform_select_options_info() {
  $views = views_get_enabled_views();
  $items = array();

  foreach ($views as $view) {
    if (!empty($view->display)) {
      foreach (array_keys($view->display) as $id) {
        if ($view->display[$id]->display_plugin == 'webform_select') {
          $items[$view->name . '-' . $id] = array(
            'title' => $view->name . '-' . $id,
            'options callback' => 'webform_views_select_options',
            'options arguments' => array('view' => $view->name, 'display_id' => $id),
          );
        }
      }
    }
  }

  return $items;
}

/**
 * Callback for retrieving webform select options.
 *
 * @see webform_options_example()
 */
function webform_views_select_options($component, $flat, $filter, $args = array()) {
  // In Webform 4.x, $filter has been removed and the value $args is really the
  // third parameter. This means that when $args is empty, we need to get the
  // arguments from the $filter argument.
  if (empty($args)) {
    $args = $filter;
  }

  // Get the view and execute it.
  $view = views_get_view($args['view']);
  $view->set_display($args['display_id']);

  return webform_views_select_options_from_view($view);
}

/**
 * Internal function to get the results
 */
function webform_views_select_options_from_view($view) {
  $view->pre_execute();
  $view->execute();

  // If we're using the new display plugin, get the field names from its
  // options, otherwise use the nid / node_title combination for backward
  // compatibility.
  if ($view->style_plugin->plugin_name == 'webform_views_select_style') {
    // Render the fields.
    $results = array();
    if (!empty($view->result) || $view->style_plugin->even_empty()) {
      $results = $view->style_plugin->render_fields($view->result);
    }

    $key = $view->style_plugin->options['mapping']['webform_select_key'];
    $value = $view->style_plugin->options['mapping']['webform_select_value'];
  }
  else {
    $results = $view->result;
    $key = 'nid';
    $value = 'node_title';
  }

  $rows = array();
  foreach ($results as $result) {
    $result = (array) $result;
    // We strip HTML tags from the field output because some fields (e.g. Date
    // fields) include tags in their output.
    $rendered_key = htmlspecialchars_decode(strip_tags($result[$key]), ENT_QUOTES);
    $rendered_value = htmlspecialchars_decode(strip_tags($result[$value]), ENT_QUOTES);
    $rows[$rendered_key] = $rendered_value;
  }

  return $rows;
}
